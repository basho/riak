#!/bin/bash

RUNNER_GEN_DIR={{platform_gen_dir}}
RELX_RIAK={{platform_bin_dir}}/riak
PID_DIR={{pid_dir}}
PIPE_DIR={{pipe_dir}}/   # terminating / (relx treats it as a prefix)

mkdir -p $PID_DIR $PIPE_DIR
chown riak:riak $PID_DIR $PIPE_DIR

function write_pid_file {  # relx doesn't seem to write the pid file, does it?
    local c=3
    sleep 1
    while [[ $c -ne 0 ]]; do
	if [ "`maybe_su ${RELX_RIAK} ping`" = "pong" ]; then
	    maybe_su ${RELX_RIAK} pid >$PID_DIR/riak.pid
            # systemd wants it to be owned by root, so:
	    chown root:root $PID_DIR/riak.pid 2&>1 >/dev/null \
                || true  # if we are run as non-root, just never mind
	    break
	fi
	sleep 2
	c=$(($c - 1))
    done
}

function delete_pid_file {
    rm -f $PID_DIR/riak.pid
}

function maybe_su {
    if [[ $EUID -ne 0 ]]; then
        NODETOOL_NODE_PREFIX=${NODETOOL_NODE_PREFIX} PIPE_DIR=${PIPE_DIR} $*
    else
	# freebsd su is fairly limited, so:
	f=$RUNNER_GEN_DIR/su_piggy
	cat >$f <<EOF
#!/bin/sh
NODETOOL_NODE_PREFIX=${NODETOOL_NODE_PREFIX} PIPE_DIR=$PIPE_DIR $*
EOF
	chmod +x $f
	su - riak $f
    fi
}

case "$1" in
    start)
        maybe_su $RELX_RIAK $* -pa {{runner_patch_dir}} \
            && write_pid_file
	test -r $PID_DIR/riak.pid && exit 0
	;;
    console|foreground)
        maybe_su $RELX_RIAK $* -pa {{runner_patch_dir}}
	;;
    stop)
        maybe_su $RELX_RIAK $* \
	    && delete_pid_file
	;;
    admin)
	shift
	maybe_su `which riak-admin` $*
	;;
    repl)
	shift
	maybe_su `which riak-repl` $*
	;;
    debug)
	shift
	maybe_su `which riak-debug` $*
	;;
    *)
        ESCAPED_ARGS=`echo "$@" | sed -e 's/\([\\\(\\\){}"\x27]\)/\\\\\1/g'`
        maybe_su $RELX_RIAK $ESCAPED_ARGS
        ;;
esac
